//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "typing.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>

     #include <drogon/drogon.h>

using namespace drogon;
std::string typing::genText(const DrTemplateData& typing_view_data)
{
	drogon::OStringStream typing_tmp_stream;
	std::string layoutName{""};
 
    auto params = typing_view_data.get<std::unordered_map<std::string, std::string, drogon::utils::internal::SafeStringHash>>("params");
    auto user = typing_view_data.get<Json::Value>("user");
	typing_tmp_stream << "<!DOCTYPE html>\n";
	typing_tmp_stream << "<html lang=\"en\">\n";
	typing_tmp_stream << "<head>\n";
	typing_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	typing_tmp_stream << "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
	typing_tmp_stream << "    <meta http-equiv=\"refresh\" content=\"300\">\n";
	typing_tmp_stream << "    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n";
	typing_tmp_stream << "          integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\n";
	typing_tmp_stream << "    <link rel=\"stylesheet\" href=\"/main.css\">\n";
	typing_tmp_stream << "    <title>Learn To Type</title>   \n";
	typing_tmp_stream << "</head>\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "<body>\n";
	typing_tmp_stream << "<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n";
	typing_tmp_stream << "    <div class=\"container\">\n";
	typing_tmp_stream << "        <a class=\"navbar-brand\" href=\"/\">Learn To Type</a>\n";
	typing_tmp_stream << "        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n";
	typing_tmp_stream << "                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n";
	typing_tmp_stream << "            <span class=\"navbar-toggler-icon\"></span>\n";
	typing_tmp_stream << "        </button>\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n";
	typing_tmp_stream << "            <ul class=\"navbar-nav mr-auto\">\n";
	typing_tmp_stream << "                <li class=\"nav-item active\">\n";
	typing_tmp_stream << "                    <a class=\"nav-link\" href=\"/home/\">Home</span></a>\n";
	typing_tmp_stream << "                </li>\n";
	typing_tmp_stream << "            </ul>\n";
	typing_tmp_stream << "            <ul class=\"navbar-nav mr-auto\">\n";
	typing_tmp_stream << "                <li class=\"nav-item active\">\n";
	typing_tmp_stream << "                    <a class=\"nav-link\" href=\"/typing/\">Typing</span></a>\n";
	typing_tmp_stream << "                </li>\n";
	typing_tmp_stream << "            </ul>\n";
	typing_tmp_stream << "            ";
 if (user.empty()) {
	typing_tmp_stream << "            <span class=\"navbar-text\">\n";
	typing_tmp_stream << "                <a class=\"nav-link\" href=\"/auth/login\">Login</a>\n";
	typing_tmp_stream << "            </span>\n";
	typing_tmp_stream << "            ";
 } else {
	typing_tmp_stream << "            <span class=\"navbar-text\">\n";
	typing_tmp_stream << "                <a class=\"nav-link\" href=\"/auth/logout\">";
typing_tmp_stream<<user["userinfo"]["given_name"];
	typing_tmp_stream << " Logout</a>\n";
	typing_tmp_stream << "            </span>\n";
	typing_tmp_stream << "            ";
 } 
	typing_tmp_stream << "        </div>\n";
	typing_tmp_stream << "    </div>\n";
	typing_tmp_stream << "</nav>\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "TODO typing app\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "</body>\n";
	typing_tmp_stream << "</html>\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "<script>\n";
typing_tmp_stream<<"\n";
	typing_tmp_stream << "</script>\n";
if(layoutName.empty())
{
std::string ret{std::move(typing_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = typing_view_data;
auto str = std::move(typing_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
